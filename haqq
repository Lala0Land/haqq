
sudo apt update 
sudo apt upgrade
sudo apt dist-upgrade

# Устанавливаем дополнительные пакеты:
sudo apt install curl build-essential git wget jq make gcc tmux htop nvme-cli pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip libleveldb-dev -y

# Устанавливаем GO и проверяем версию:
ver="1.18.2" && \
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" && \
sudo rm -rf /usr/local/go && \
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" && \
rm "go$ver.linux-amd64.tar.gz" && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile && \
source $HOME/.bash_profile && \
go version

# Скачиваем и устанавливаем бинарные файлы:
git clone https://github.com/haqq-network/haqq.git
cd haqq
make install
chmod +x /root/go/bin/haqqd && sudo mv /root/go/bin/haqqd /usr/local/bin/haqqd
cd $HOME

# Задаем переменные:

MONIKER="your_name"
CHAIN="haqq_53211-1"
WALLET_NAME="your_name"

# Добавляем все в баш профиль:
echo 'export MONIKER='${MONIKER} >> $HOME/.bash_profile
echo 'export CHAIN='${CHAIN} >> $HOME/.bash_profile
echo 'export WALLET_NAME='${WALLET_NAME} >> $HOME/.bash_profile
source $HOME/.bash_profile

# Инициализируем ноду:
haqqd init $MONIKER --chain-id $CHAIN

# Прописываем имя сети в Config:
haqqd config chain-id $CHAIN

# Скачиваем генезисный файл:
curl -OL https://storage.googleapis.com/haqq-testedge-snapshots/genesis.json
mv genesis.json $HOME/.haqqd/config/genesis.json
haqqd validate-genesis

# Сбрасываем состояние валидатора:
haqqd tendermint unsafe-reset-all --home $HOME/.haqqd

# Настраиваем синхронизацию:
curl -OL https://raw.githubusercontent.com/haqq-network/testnets/main/TestEdge/state_sync.sh
chmod +x state_sync.sh ./state_sync.sh

# Настраиваем прунинг:
pruning="custom" && \
pruning_keep_recent="100" && \
pruning_keep_every="0" && \
pruning_interval="50" && \
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.haqqd/config/app.toml && \
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.haqqd/config/app.toml && \
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.haqqd/config/app.toml && \
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.haqqd/config/app.toml

# Выключаем индексер (необязательно):
indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/.haqqd/config/config.toml

# Создаем сервисный файл:
sudo tee /etc/systemd/system/haqqd.service > /dev/null <<EOF
[Unit]
Description=haqqd
After=network-online.target

[Service]
User=$USER
ExecStart=$(which haqqd) start
Restart=on-failure
RestartSec=3
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

# Запускаем сервис, ждем синхронизации (когда высота будет актуальная):
sudo systemctl daemon-reload && \
sudo systemctl enable haqqd && \
sudo systemctl restart haqqd

# !!! Если нода долго не синхронизируется !!! 
# !!! Способ №1 !!!
sudo systemctl stop haqqd
haqqd tendermint unsafe-reset-all --home $HOME/.haqqd
SEEDS="8f7b0add0523ec3648cb48bc12ac35357b1a73ae@195.201.123.87:26656,899eb370da6930cf0bfe01478c82548bb7c71460@34.90.233.163:26656,f2a78c20d5bb567dd05d525b76324a45b5b7aa28@34.90.227.10:26656,4705cf12fb56d7f9eb7144937c9f1b1d8c7b6a4a@34.91.195.139:26656"
PEERS=""; \
sed -i.bak -e "s/^seeds *=.*/seeds = \"$SEEDS\"/; s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/.haqqd/config/config.toml
wget -O $HOME/.haqqd/config/addrbook.json "https://raw.githubusercontent.com/StakeTake/guidecosmos/main/haqq/haqq_53211-1/addrbook.json"
SNAP_RPC="http://haqq.stake-take.com:36657"
LATEST_HEIGHT=$(curl -s $SNAP_RPC/block | jq -r .result.block.header.height); \
BLOCK_HEIGHT=$((LATEST_HEIGHT - 2000)); \
TRUST_HASH=$(curl -s "$SNAP_RPC/block?height=$BLOCK_HEIGHT" | jq -r .result.block_id.hash)
echo $LATEST_HEIGHT $BLOCK_HEIGHT $TRUST_HASH

sed -i.bak -E "s|^(enable[[:space:]]+=[[:space:]]+).*$|\1true| ; \
s|^(rpc_servers[[:space:]]+=[[:space:]]+).*$|\1\"$SNAP_RPC,$SNAP_RPC\"| ; \
s|^(trust_height[[:space:]]+=[[:space:]]+).*$|\1$BLOCK_HEIGHT| ; \
s|^(trust_hash[[:space:]]+=[[:space:]]+).*$|\1\"$TRUST_HASH\"| ; \
s|^(seeds[[:space:]]+=[[:space:]]+).*$|\1\"\"|" $HOME/.haqqd/config/config.toml
sudo systemctl restart haqqd && journalctl -u haqqd -f -o cat

# !!! Способ №2 !!!
sudo systemctl stop haqqd
haqqd tendermint unsafe-reset-all --home $HOME/.haqqd --keep-addr-book
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="10"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.haqqd/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.haqqd/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.haqqd/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.haqqd/config/app.toml
cd
rm -rf ~/.haqqd/data; \
wget -O - http://snap.stake-take.com:8000/haqq.tar.gz | tar xf -
mv $HOME/root/.haqqd/data $HOME/.haqqd
rm -rf $HOME/root
wget -O $HOME/.haqqd/config/addrbook.json "https://raw.githubusercontent.com/StakeTake/guidecosmos/main/haqq/haqq_53211-1/addrbook.json"
sudo systemctl restart haqqd && journalctl -u haqqd -f -o cat

# !!! Способ №3 !!!
sudo systemctl stop haqqd
rm $HOME/.haqqd/config/addrbook.json
wget -O $HOME/.haqqd/config/addrbook.json "https://raw.githubusercontent.com/StakeTake/guidecosmos/main/haqq/haqq_53211-1/addrbook.json"
sudo systemctl restart haqqd && journalctl -u haqqd -f -o cat


# Проверить статус синхронизации. (В поле catching_up должно быть false.)
curl localhost:26657/status

# После синхронизации создаем или восстанавливаем кошелек
#Создать кошелек:
haqqd keys add $WALLET_NAME

# Восстановить кошелек по мнемонику:
haqqd keys add $WALLET_NAME --recover

# Добавляем переменную с адресом кошелька:
WALLET_ADDRESS=$(haqqd keys show $WALLET_NAME -a)

# Добавляем переменную в баш профиль:
echo 'export WALLET_ADDRESS='${WALLET_ADDRESS} >> $HOME/.bash_profile source $HOME/.bash_profile

# Запрашиваем тестовые токены https://testedge.haqq.network/

# Смотрим данные кошелька, вместо адрес_кошелька_haqq вставляем свой адрес:
haqqd debug addr адрес_кошелька_haqq

#Проверяем баланс:
haqqd query bank balances $WALLET_ADDRESS

#Если средства поступили, то создаем валидатора. Сумму можно указать любую

haqqd tx staking create-validator \
  --amount=2000000000000000000aISLM \
  --pubkey=$(haqqd tendermint show-validator) \
  --moniker=$MONIKER \
  --chain-id=haqq_53211-1 \
  --commission-rate="0.10" \
  --commission-max-rate="0.20" \
  --commission-max-change-rate="0.01" \
  --min-self-delegation="1000000" \
  --gas="auto" \
  --from=$WALLET_NAME \
  --node https://rpc.tm.testedge.haqq.network:443
  
# Задаем переменную с адресом валидатора:
VALOPER=$(haqqd keys show $WALLET_ADDRESS --bech val -a)

# Добавляем ее в баш профиль:
echo 'export VALOPER='${VALOPER} >> $HOME/.bash_profile
source $HOME/.bash_profile

# Проверка статуса валидатора:
haqqd query staking validator $VALOPER

# Делегировать себе:
haqqd tx staking delegate $VALOPER 1000000000000000000aISLM --from $WALLET_NAME --chain-id haqq_53211-1

# Выйти из тюрьмы
haqqd tx slashing unjail --from $WALLET_NAME --chain-id $CHAIN
